
package Forms;

import java.awt.Color;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableModel;
import objetoNegocio.Categoria;
import objetoNegocio.Producto;
import objetoNegocio.Proveedor;
import repositories.CategoriaRepository;

/**
 *
 * @author Estefanía Aguilar
 */
public class FmCategoria extends javax.swing.JFrame {

    CategoriaRepository categoriaReposity;
    /**
     * Creates new form FmCategoria
     */
    public FmCategoria() {
        initComponents();
        this.setTitle("Categoría");
        this.setLocationRelativeTo(null);
        this.categoriaReposity = new CategoriaRepository();
        this.cargarTabla();
        //Imagen de fondo
        try {
            ImagenFondo fondo = new ImagenFondo(ImageIO.read(new File("C:/Users/laura/PuntoDeVentas/src/imagenes/blancoconcuadros.jpg")));
            JPanel panel = (JPanel) this.getContentPane();
            panel.setBorder(fondo);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        
        txtID.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblID = new javax.swing.JLabel();
        lbNombre = new javax.swing.JLabel();
        lbDescripcion = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        lbRegistroCategorias = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbCategorias = new javax.swing.JTable();
        btnCancelar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtDescripcion = new javax.swing.JTextField();
        btnEliminar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(638, 527));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblID.setFont(new java.awt.Font("Calibri Light", 1, 24)); // NOI18N
        lblID.setText("ID");
        getContentPane().add(lblID, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, -1, -1));

        lbNombre.setFont(new java.awt.Font("Calibri Light", 1, 24)); // NOI18N
        lbNombre.setText("NOMBRE");
        getContentPane().add(lbNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, -1));

        lbDescripcion.setFont(new java.awt.Font("Calibri Light", 1, 24)); // NOI18N
        lbDescripcion.setText("DESCRIPCIÓN");
        getContentPane().add(lbDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, -1, -1));

        txtID.setFont(new java.awt.Font("Calibri Light", 0, 22)); // NOI18N
        getContentPane().add(txtID, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 90, 230, 30));

        txtNombre.setFont(new java.awt.Font("Calibri Light", 0, 22)); // NOI18N
        getContentPane().add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 140, 230, 30));

        lbRegistroCategorias.setFont(new java.awt.Font("Calibri Light", 3, 24)); // NOI18N
        lbRegistroCategorias.setText("REGISTRO DE CATEGORIAS");
        getContentPane().add(lbRegistroCategorias, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 20, -1, -1));

        tbCategorias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "NOMBRE", "DESCRICION"
            }
        ));
        tbCategorias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbCategoriasMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tbCategorias);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, 560, 170));

        btnCancelar.setFont(new java.awt.Font("Calibri Light", 0, 22)); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        getContentPane().add(btnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 190, 110, 30));

        btnGuardar.setFont(new java.awt.Font("Calibri Light", 0, 22)); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        getContentPane().add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 90, 110, 30));

        jLabel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, 600, 210));

        jLabel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 600, 50));

        txtDescripcion.setFont(new java.awt.Font("Calibri Light", 0, 22)); // NOI18N
        getContentPane().add(txtDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 190, 230, 30));

        btnEliminar.setFont(new java.awt.Font("Calibri Light", 0, 22)); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        getContentPane().add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 140, 110, 30));

        jLabel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 600, 180));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        int indiceFila = tbCategorias.getSelectedRow();
        if(indiceFila == -1){
            JOptionPane.showMessageDialog(this, "Debes seleccionar una producto", "Información", JOptionPane.ERROR_MESSAGE);
        }else{
            Long proveedor = (Long)tbCategorias.getValueAt(indiceFila, 0);
            categoriaReposity.eliminar(proveedor);
            limpiar();
            cargarTabla();
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        if(btnGuardar.getText().equalsIgnoreCase("Editar")){
            btnGuardar.setText("Actualizar");
            txtNombre.setEnabled(true);
            txtDescripcion.setEnabled(true);
            
        }else if(btnGuardar.getText().equalsIgnoreCase("Actualizar") && !txtID.getText().isEmpty() && 
                !txtNombre.getText().isEmpty() && !txtDescripcion.getText().isEmpty()){
            
            //Se actualiza en la base de datos
            categoriaReposity.actualizar(new Categoria(Long.parseLong(txtID.getText()), txtNombre.getText(), 
                    txtDescripcion.getText()));
            limpiar();
            
            txtNombre.setBorder(txtID.getBorder());
            txtDescripcion.setBorder(txtID.getBorder());
            
        //Validar que todos los campos esten llenos    
        }else if(txtID.getText().isEmpty() && !txtNombre.getText().isEmpty() && !txtDescripcion.getText().isEmpty() ){
            
            //Guardar en la base de datos
            categoriaReposity.guardar(new Categoria(txtNombre.getText(), txtDescripcion.getText())); 
            limpiar();
            
            txtNombre.setBorder(txtID.getBorder());
            txtDescripcion.setBorder(txtID.getBorder());
            
        }else{
            //Todos los campos son obligatorios
            LineBorder border = new LineBorder(Color.red);
            txtNombre.setBorder(border);
            txtDescripcion.setBorder(border);
        }
        
        
        
        cargarTabla();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void tbCategoriasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbCategoriasMouseClicked
        mostrarInfo();
        btnGuardar.setText("Editar");
    }//GEN-LAST:event_tbCategoriasMouseClicked

    private void limpiar(){
        txtID.setText("");
        txtNombre.setText("");;
        txtDescripcion.setText("");
        txtNombre.setEnabled(true);
        txtDescripcion.setEnabled(true);
        btnGuardar.setText("Guardar");
    }
    
    private void cargarTabla(){
        ArrayList<Categoria> categorias = categoriaReposity.buscarTodas();        
        DefaultTableModel modelo = (DefaultTableModel)tbCategorias.getModel();        
        modelo.setRowCount(0);
        for (Categoria categoria: categorias) {
            Object[] fila = new Object[8];
            fila[0] = categoria.getId();
            fila[1] = categoria.getNombre();
            fila[2] = categoria.getDescripcion();
            modelo.addRow(fila);
        }
    }
    
    private void mostrarInfo(){
        int indiceFila = tbCategorias.getSelectedRow();
        Long idCategoria = (Long)tbCategorias.getValueAt(indiceFila, 0);
            Categoria categoria = categoriaReposity.buscarPorId(idCategoria);
            
            txtID.setText(String.valueOf(categoria.getId()));
            txtNombre.setText(categoria.getNombre());
            txtDescripcion.setText(categoria.getDescripcion());
            
            txtID.setEnabled(false);
            txtNombre.setEnabled(false);
            txtDescripcion.setEnabled(false);
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FmCategoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FmCategoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FmCategoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FmCategoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FmCategoria().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lbDescripcion;
    private javax.swing.JLabel lbNombre;
    private javax.swing.JLabel lbRegistroCategorias;
    private javax.swing.JLabel lblID;
    private javax.swing.JTable tbCategorias;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
